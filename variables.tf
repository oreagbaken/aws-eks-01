# Generated by Terragrunt. Sig: nIlQXj57tbuaRZEa
/* **** PLEASE DO NOT ADD ANY CONTENTS ON variables.tf
INSTEAD ADD THE VARIABLES in _envcommon/aws-variables.tf
PLEASE NOTE that a default value is mandatory for any variable added. IF no value can be passed, please use default = ""
*/


variable "region" {
  description = "Region name"
  type        = string
  validation {
    condition     = contains(["ap-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "ca-central-1", "sa-east-1", "ap-southeast-1", "ap-southeast-2", "eu-central-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2"], var.region)
    error_message = "Valid values for variable region are: (ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-3, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2)."
  }
}

variable "short_region" {
  description = "Region name"
  type        = string
  default     = null
}
variable "vpc_enable_dns_hostnames" {
  description = "Should be true to enable DNS hostnames in the VPC."
  type        = bool
  default     = true
}

variable "vpc_private_subnets" {
  default     = null
  description = "A list of VPC's private subnets to be created."
  type        = list(string)
}

variable "vpc_public_subnets" {
  default     = null
  description = "A list of VPC's public subnets to be created."
  type        = list(string)
}

variable "eks_create_cluster" {
  description = "Whether to create the EKS cluster."
  type        = bool
  default     = true
}

variable "eks_cluster_endpoint_private_access" {
  description = " Indicates whether or not the Amazon EKS private API server endpoint is enabled."
  type        = bool
  default     = true
}

variable "eks_cluster_endpoint_public_access" {
  description = "Indicates whether or not the Amazon EKS public API server endpoint is enabled. When it's set to `false` ensure to have a proper private access with `cluster_endpoint_private_access = true`."
  type        = bool
  default     = true
}

variable "eks_cluster_endpoint_public_access_cidrs" {
  description = "CIDR of the addresses that will be allowed in the SG to contact the cluster public endpoint."
  type        = list(string)
  default     = ["54.164.230.180/32", "54.200.147.163/32", "44.237.222.40/32", "52.32.114.139/32"]
}

variable "eks_cluster_enable_log_types" {
  description = "A list of the desired control plane logging to enable."
  type        = list(string)
  default     = ["api", "audit", "authenticator", "controllerManager", "scheduler"]
}

variable "eks_cluster_name" {
  description = "Name of the EKS cluster. Also used as a prefix in names of related resources."
  type        = string
  default     = ""
  validation {
    condition     = (length(var.eks_cluster_name) < 100)
    error_message = "Limit the cluster name to 100 characters"
  }
}

variable "eks_cluster_log_retention_in_days" {
  description = "Number of days to retain log events."
  type        = number
  default     = 7
}

variable "eks_enable_irsa" {
  description = "Whether to create OpenID Connect Provider for EKS to enable IRSA."
  type        = bool
  default     = true
}

variable "eks_kubernetes_version" {
  description = "Kubernetes version to use in the control planes of the EKS cluster."
  type        = string
}

variable "eks_manage_aws_auth" {
  description = "Whether to apply the aws-auth configmap file."
  type        = bool
  default     = false
}

variable "eks_write_kubeconfig" {
  description = "Whether to write a Kubectl config file containing the cluster configuration. Saved to `kubeconfig_output_path`."
  type        = bool
  default     = false
}

variable "eks_cluster_node_groups_defaults" {
  description = "Map of values to be applied to all node groups."
  type        = any
}

variable "eks_cluster_vpc" {
  default     = null
  description = "The VPC to be used for creating the cluster in"
  type        = string
}

variable "eks_subnets" {
  default     = null
  description = "The subnets where the cluster and workers will be place in"
  type        = list(string)
}

variable "ea_staging_nat_gateways_list" {
  description = "List of EA NAT Gateway EIPs"
  type        = list(string)
  default     = null
}

variable "cert_manager_iam_suffix" {
  description = "The name to be used for the Cert Manager IAM role."
  default     = "CertManager"
  type        = string
}
variable "cert_manager_iam_policy_name" {
  description = "The name to be used for the AWS Load Balancer Controller IAM policy."
  default     = "AllowCertManagerToModifyRoute53Records"
  type        = string
}

variable "iam_role_name_suffix" {
  description = "Prefix to be used on all IAM roles created by this module."
  default     = "Role"
  type        = string
}

variable "iam_name_prefix" {
  description = "Prefix to be used on all IAM entities created by this module."
  default     = "AmazonEKS"
  type        = string
}

variable "iam_policy_name_suffix" {
  description = "Prefix to be used on all IAM policies created by this module."
  default     = "Policy"
  type        = string
}

variable "cluster_autoscaler_iam_suffix" {
  description = "The name to be used for the Cluster Autoscaler IAM role."
  default     = "ClusterAutoscaler"
  type        = string
}

variable "aws_load_balancer_controller_iam_suffix" {
  description = "The name to be used for the AWS Load Balancer Controller IAM policy."
  default     = "ELBController"
  type        = string
}

variable "external_dns_iam_suffix" {
  description = "The name to be used for the External DNS IAM policy."
  default     = "ExternalDNS"
  type        = string
}

variable "transcribe_oidc_subjects_with_wildcards" {
  description = "OIDC fully qualified subject to be used on AWS Transcribe IAM role."
  default     = ["system:serviceaccount:*:*aws-transcribe"]
  type        = set(string)
}

variable "aws_transcribe_iam_suffix" {
  type    = string
  default = "AWSTranscribe"
}

variable "vpc_enable_vpn_gateway" {
  description = "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC."
  type        = bool
  default     = false
}
variable "vpc_enable_nat_gateway" {
  description = "Should be true if you want to provision NAT Gateways for each of your private networks."
  type        = bool
  default     = true
}

variable "vpc_create" {
  default     = true
  description = "Whether or not to create the VPC"
  type        = bool
}

variable "vpc_availability_zones" {
  description = "A list of availability zones names or ids in the region."
  type        = list(string)
  default     = null
}

variable "vpc_private_subnet_tags" {
  description = "Tags to be added to the private subnets."
  type        = map(string)
  default = {
    "kubernetes.io/role/internal-elb" = "1"
  }
}
variable "vpc_public_subnet_tags" {
  description = "Tags to be added to the private subnets."
  type        = map(string)
  default = {
    "kubernetes.io/role/elb" = "1"
  }
}
variable "vault_endpoint_service_name" {
  description = "Service name of Vault endpoint service"
  type        = string
  default     = null
}
variable "private_subnet_suffix" {
  description = "Suffix to append to private subnets name"
  type        = string
  default     = "private"
}

variable "public_subnet_suffix" {
  description = "Suffix to append to public subnets name"
  type        = string
  default     = "public"
}
variable "aws_auth-mapRoles" {
  type = list(object({
    iam_entity  = string,
    username    = string,
    groups      = list(string),
    rolebinding = string
  }))
}
variable "s3_endpoint_service_name" {
  type        = string
  default     = "s3"
  description = "(Required) The service name is usually s3, transcribe, cloudwatch etc."
}

variable "aws_auth-mapusers" {
  type = list(object({
    iam_entity  = string,
    username    = string,
    groups      = list(string),
    rolebinding = string
  }))
  default = []
}

variable "hostedZoneID" {
  description = "ID of the Route53 Hosted Zone."
  type        = string
  default     = null
}

variable "nlb_canonical_hosted_zone_id" {
  description = "ID of the Route53 Hosted Zone."
  type        = string
  default     = null
}

variable "domainName" {
  description = "Domain name used for Application."
  type        = string
  default     = null
}


variable "secret_manager_iam_suffix" {
  description = "The name to be used for the Secret Manager IAM role."
  default     = "EKSSecretManager"
  type        = string
}

variable "secret_manager_iam_policy_name" {
  description = "The name to be used for the Secret Manager IAM policy."
  default     = "AllowEKSToReadFromSecretsManager"
  type        = string
}

variable "cluster_alb_arn" {
  type        = string
  description = "(Required) The ARN of the Cluster Apps ALB to be associated with AWS NLB. Can be obtained from Ingress resource inside eks cluster."
  default     = null
}
variable "eks_iam_policy_name" {
  description = "The name to be used for the EKS IAM policy."
  default     = "EKS"
  type        = string
}
variable "appsPublicRecord" {
  description = "DNS of the Application."
  type        = string
  default     = null
}

variable "controlPlanePublicRecord" {
  description = "DNS of the ControlPlane App."
  type        = string
  default     = null
}

variable "appsPrivateRecord" {
  description = "DNS of the Application."
  type        = string
  default     = null
}

variable "controlPlanePrivateRecord" {
  description = "DNS of the ControlPlane App."
  type        = string
  default     = null
}

variable "server_side_encryption_configuration" {
  description = "Server-side encryption configuration."
  type = object({ rule = object({
    bucket_key_enabled                      = string
    apply_server_side_encryption_by_default = map(string)
    })
  })
  default = {
    rule = {
      bucket_key_enabled = null
      apply_server_side_encryption_by_default = {
        sse_algorithm = "AES256"
      }
    }
  }
}
variable "ea_kafka_ip_addresses_list" {
  type        = list(string)
  description = "List of IP addresses to communicate with kafka on the Enterprise Archive Environment."
  default     = null
}
variable "elasticsearch_egress_rules" {
  description = "List of subnets where Elasticsearch is deployed by platform team."
  type        = list(string)
  default     = null
}

variable "cluster_iam_role_permission_boundary" {
  description = "IAM Policy assigned as a permission boundary for the EKS Cluster Role."
  type        = string
  default     = null
}

variable "node_groups_iam_role_permission_boundary" {
  description = "IAM Policy assigned as a permission boundary for the EKS Worker Nodes."
  type        = string
  default     = null
}

variable "eks_node_additional_iam_policies" {
  description = "Additional IAM Policies for the EKS Worker Nodes."
  type        = any
  default     = null
}

variable "vault_endpoint_type" {
  description = "Type of Endpoint used for Vault connectivity"
  type        = string
  default     = "Interface"
  validation {
    condition     = contains(["Interface"], var.vault_endpoint_type)
    error_message = "Valid values for variable vault_endpoint_type are: (Interface)."
  }
}

variable "vault_endpoint_name" {
  description = "Tag name for the Vault Endpoint"
  type        = string
  default     = "vault"
  validation {
    condition     = contains(["vault"], var.vault_endpoint_name)
    error_message = "Valid values for variable vault_endpoint_type are: (vault)."
  }
}

variable "ep_private_dns_enabled" {
  description = "Boolean flag to decide the private dns for interface endpoint."
  type        = bool
  default     = false
}

variable "s3_endpoint_type" {
  description = "Type of Endpoint used for S3."
  type        = string
  default     = "Gateway"
  validation {
    condition     = contains(["Gateway"], var.s3_endpoint_type)
    error_message = "Valid values for variable vault_endpoint_type are: (Gateway)."
  }
}

variable "s3_endpoint_name" {
  description = "Tag name for the S3 Endpoint"
  type        = string
  default     = "s3"
  validation {
    condition     = contains(["s3"], var.s3_endpoint_name)
    error_message = "Valid values for variable vault_endpoint_type are: (s3)."
  }
}
variable "create_eks_iam_resources" {
  type    = bool
  default = true
}

variable "create_asg_tags" {
  type    = bool
  default = true
}

variable "vault_interface_endpoint" {
  type    = bool
  default = true
}

variable "create_iam_roles" {
  type    = bool
  default = true
}

variable "s3endpoint" {
  type    = bool
  default = true
}

variable "create_sagemaker_security_group" {
  type    = bool
  default = true
}

variable "create_s3_buckets" {
  type    = bool
  default = true
}

variable "subnet-id-script-path" {
  type    = string
  default = null
}

variable "create_route53_records" {
  type    = bool
  default = true
}

variable "ceate_network_load_balancers" {
  type    = bool
  default = true
}
